name: Formatting, Style check & linting
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  QA-QC:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v2
        with:
          update-pip: "true"
          update-setuptools: "true"
          update-wheel: "true"
      - name: Installing Black and autoflake
        run: pip install black autoflake
      - name: Check code base with black
        run: black --check .
      - name: If needed, commit black changes to the pull request
        if: failure()
        run: |
          black .
          autoflake --in-place -r --ignore-init-module-imports --remove-unused-variables --remove-all-unused-imports .
          git config --global user.name 'autoformatting'
          git config --global user.email 'pandalearnstocode@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout $GITHUB_HEAD_REF
          git commit -am "fixup: Format Python code with Black"
          git push origin $GITHUB_HEAD_REF
      - name: Running flake8 check in existing code base
        uses: reviewdog/action-flake8@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
      - name: Running static typing using mypy
        uses: tsuyoshicho/action-mypy@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
      - name: Running pylint check in existing code base
        uses: dciborow/action-pylint@0.0.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
      - name: Python security check using Bandit
        uses: Joel-hanson/bandit-report-artifacts@V1
        with:
          python_version: '3.8'
          project_path: minipackage
          ignore_failure: true
