# GitHub Action that uses Black to reformat the Python code in an incoming pull request.
# If all Python code in the pull request is compliant with Black then this Action does nothing.
# Othewrwise, Black is run and its changes are committed back to the incoming pull request.
# https://github.com/cclauss/autoblack
# Ref: https://github.com/psf/black/actions/runs/17913292/workflow
# https://www.henryschmale.org/2021/01/21/pylint-github-actions.html
# https://github.com/marketplace/actions/lintly-flake8
# https://github.com/marketplace/actions/flake8-with-annotations
# https://medium.com/swlh/enhancing-code-quality-with-github-actions-67561c6f7063
# http://www.grantmcconnaughey.com/blog/2020/02/25/automate-python-code-quality/

name: autoblack
on:
  pull_request:
  schedule:
    - cron: '0 0 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Black
        run: |
          pip install --upgrade pip
          pip install black pylint autoflake
          pip install -r requirements.txt
      - name: Run black --check .
        run: black --check .
      - name: If needed, commit black changes to the pull request
        if: failure()
        run: |
          black .
          autoflake --in-place -r --ignore-init-module-imports --remove-unused-variables --remove-all-unused-imports minipackage/
          git config --global user.name 'autoblack'
          git config --global user.email 'cclauss@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git fetch --all
          git checkout $GITHUB_HEAD_REF
          git commit -am "fixup: Format Python code with Black"
          git push
      - name: Run static code analysis using mypy
        run: |
          pip install -r requirements.txt
          pip install mypy typer typer-cli loguru
          mypy minipackage/
      - uses: grantmcconnaughey/lintly-flake8-github-action@v1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          failIf: new
          args: "--ignore=E121,E123,F401 ."
      - name: Run Bandit Report
        uses: libertyy/py3-bandit-check@v2
      - name: Save Bandit txt Report
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          path: ${{ RUNNER.temp }}/_github_home/bandit_report.out
      - uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: "python_alelo tests"
          use-pylint: true
          use-pycodestyle: true
          use-flake8: true
          use-black: true
          use-mypy: true
          use-isort: true
          extra-pylint-options: ""
          extra-pycodestyle-options: ""
          extra-flake8-options: ""
          extra-black-options: ""
          extra-mypy-options: ""
          extra-isort-options: ""
      - name: wemake-python-styleguide
        uses: wemake-services/wemake-python-styleguide@0.15.3
        with:
          reporter: 'github-pr-review'
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
